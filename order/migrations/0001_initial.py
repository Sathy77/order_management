# Generated by Django 5.1.1 on 2024-09-25 07:42

import django.core.validators
import django.db.models.deletion
import helps.abstract.abstractclass
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('product', '0002_product_created_by_product_updated_by'),
        ('zone', '0002_rename_zone_deliveryzone'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ordersummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(default=helps.abstract.abstractclass.generate_unique_code, editable=False, max_length=30, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('date', models.DateField()),
                ('invoice_no', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('payment_mode', models.CharField(choices=[('Cash on Delivery', 'Cash on Delivery'), ('Credit/Debit Card', 'Credit/Debit Card'), ('Mobile Wallet', 'Mobile Wallet')], default='Cash on Delivery', max_length=20)),
                ('product_cost', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('delivery_cost', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('coupon', models.IntegerField()),
                ('discount', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('free_delivery', models.BooleanField(default=False)),
                ('grand_total', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_profit', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('order_status', models.CharField(choices=[('Pending', 'Pending'), ('On Process', 'On Process'), ('Hand over to courier', 'Hand over to courier'), ('Delivered', 'Delivered'), ('Cancelled', 'Cancelled'), ('Returned', 'Returned')], default='Pending', max_length=25)),
                ('deliveryzone', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ordersummary_deliveryzone', to='zone.deliveryzone')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ordersummary_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Orderitems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(default=helps.abstract.abstractclass.generate_unique_code, editable=False, max_length=30, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('order_quantity', models.IntegerField()),
                ('unit_trade_price', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('unit_mrp', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orderitems_product', to='product.product')),
                ('ordersummary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orderitems_ordersummary', to='order.ordersummary')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
